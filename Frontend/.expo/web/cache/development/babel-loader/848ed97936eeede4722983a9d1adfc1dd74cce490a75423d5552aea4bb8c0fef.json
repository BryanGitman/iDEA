{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from 'axios';\nimport React, { useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport PrimeraPantalla from \"./screens/PrimeraPantalla\";\nimport LocalizarDEA from \"./screens/LocalizarDEA\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\naxios.defaults.baseURL = 'http://localhost:3000';\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  var _useFonts = useFonts({\n      'Poppins-Regular': require(\"./assets/fonts/Poppins-Regular.ttf\"),\n      'Poppins-Bold': require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n      'Poppins-SemiBold': require(\"./assets/fonts/Poppins-Bold.ttf\"),\n      'Poppins-Italic': require(\"./assets/fonts/Poppins-Italic.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n      Text.defaultProps.style.fontFamily = 'Poppins-Regular';\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    onLayout: onLayoutRootView,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Index\",\n        component: PrimeraPantalla\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: LocalizarDEA\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["axios","React","useCallback","SplashScreen","useFonts","AppLoading","NavigationContainer","createNativeStackNavigator","PrimeraPantalla","LocalizarDEA","defaults","baseURL","Stack","App","require","fontsLoaded","onLayoutRootView","hideAsync","Text","defaultProps","style","fontFamily","headerShown"],"sources":["C:/Users/devandroid/Desktop/iDEA/frontend/App.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useCallback } from 'react';\r\nimport { Text } from 'react-native';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { useFonts } from 'expo-font';\r\nimport AppLoading from 'expo-app-loading';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport PrimeraPantalla from './screens/PrimeraPantalla';\r\nimport LocalizarDEA from './screens/LocalizarDEA';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n//SplashScreen.preventAutoHideAsync();\r\n\r\nconst App = () => {\r\n  const [fontsLoaded] = useFonts({\r\n    'Poppins-Regular': require('./assets/fonts/Poppins-Regular.ttf'),\r\n    'Poppins-Bold': require('./assets/fonts/Poppins-SemiBold.ttf'),\r\n    'Poppins-SemiBold': require('./assets/fonts/Poppins-Bold.ttf'),\r\n    'Poppins-Italic': require('./assets/fonts/Poppins-Italic.ttf')\r\n  });\r\n\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (fontsLoaded) {\r\n      await SplashScreen.hideAsync();\r\n      Text.defaultProps.style.fontFamily = 'Poppins-Regular';\r\n    }\r\n  }, [fontsLoaded]);\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer onLayout={onLayoutRootView}>\r\n      <Stack.Navigator screenOptions={{headerShown: false}}>\r\n        <Stack.Screen name=\"Index\" component={PrimeraPantalla} />\r\n        <Stack.Screen name=\"Home\" component={LocalizarDEA} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAAC;AAE3C,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,eAAe;AACtB,OAAOC,YAAY;AAA+B;AAAA;AAElDT,KAAK,CAACU,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,IAAMC,KAAK,GAAGL,0BAA0B,EAAE;AAI1C,IAAMM,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,gBAAsBT,QAAQ,CAAC;MAC7B,iBAAiB,EAAEU,OAAO,sCAAsC;MAChE,cAAc,EAAEA,OAAO,uCAAuC;MAC9D,kBAAkB,EAAEA,OAAO,mCAAmC;MAC9D,gBAAgB,EAAEA,OAAO;IAC3B,CAAC,CAAC;IAAA;IALKC,WAAW;EAOlB,IAAMC,gBAAgB,GAAGd,WAAW,mBAAC,aAAY;IAC/C,IAAIa,WAAW,EAAE;MACf,MAAMZ,YAAY,CAACc,SAAS,EAAE;MAC9BC,IAAI,CAACC,YAAY,CAACC,KAAK,CAACC,UAAU,GAAG,iBAAiB;IACxD;EACF,CAAC,GAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACE,KAAC,mBAAmB;IAAC,QAAQ,EAAEC,gBAAiB;IAAA,UAC9C,MAAC,KAAK,CAAC,SAAS;MAAC,aAAa,EAAE;QAACM,WAAW,EAAE;MAAK,CAAE;MAAA,WACnD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS,EAAEd;MAAgB,EAAG,EACzD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEC;MAAa,EAAG;IAAA;EACrC,EACE;AAE1B,CAAC;AAED,eAAeI,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}