{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport * as React from 'react';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport PrimeraPantalla from \"./screens/PrimeraPantalla\";\nimport LocalizarDEA from \"./screens/LocalizarDEA\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\naxios.defaults.baseURL = 'http://localhost:3000';\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  useEffect(function () {\n    function loadFont() {\n      return _loadFont.apply(this, arguments);\n    }\n    function _loadFont() {\n      _loadFont = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'custom-font': require(\"./assets/fonts/CustomFont.ttf\")\n        });\n        setFontLoaded(true);\n      });\n      return _loadFont.apply(this, arguments);\n    }\n    loadFont();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      style: {\n        fontFamily: 'Poppins'\n      },\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Index\",\n        component: PrimeraPantalla\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: LocalizarDEA\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["axios","React","SplashScreen","Font","AppLoading","NavigationContainer","createNativeStackNavigator","PrimeraPantalla","LocalizarDEA","defaults","baseURL","Stack","App","useEffect","loadFont","loadAsync","require","setFontLoaded","fontFamily","headerShown"],"sources":["C:/Users/devandroid/Desktop/iDEA/frontend/App.js"],"sourcesContent":["import axios from 'axios';\r\nimport * as React from 'react';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as Font from 'expo-font';\r\nimport AppLoading from 'expo-app-loading';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport PrimeraPantalla from './screens/PrimeraPantalla';\r\nimport LocalizarDEA from './screens/LocalizarDEA';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    async function loadFont() {\r\n      await Font.loadAsync({\r\n        'custom-font': require('./assets/fonts/CustomFont.ttf'),\r\n      });\r\n      setFontLoaded(true);\r\n    }\r\n\r\n    loadFont();\r\n  }, []);\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator style={{fontFamily: 'Poppins'}} screenOptions={{headerShown: false}}>\r\n        <Stack.Screen name=\"Index\" component={PrimeraPantalla} />\r\n        <Stack.Screen name=\"Home\" component={LocalizarDEA} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,eAAe;AACtB,OAAOC,YAAY;AAA+B;AAAA;AAElDR,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,IAAMC,KAAK,GAAGL,0BAA0B,EAAE;AAE1C,IAAMM,GAAG,GAAG,SAANA,GAAG,GAAS;EAChBC,SAAS,CAAC,YAAM;IAAA,SACCC,QAAQ;MAAA;IAAA;IAAA;MAAA,8BAAvB,aAA0B;QACxB,MAAMX,IAAI,CAACY,SAAS,CAAC;UACnB,aAAa,EAAEC,OAAO;QACxB,CAAC,CAAC;QACFC,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC;MAAA;IAAA;IAEDH,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,OACE,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MAAC,KAAK,EAAE;QAACI,UAAU,EAAE;MAAS,CAAE;MAAC,aAAa,EAAE;QAACC,WAAW,EAAE;MAAK,CAAE;MAAA,WACnF,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,OAAO;QAAC,SAAS,EAAEZ;MAAgB,EAAG,EACzD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEC;MAAa,EAAG;IAAA;EACrC,EACE;AAE1B,CAAC;AAED,eAAeI,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}